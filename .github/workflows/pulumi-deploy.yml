name: Pulumi Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout the repository code
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Setup Python environment
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # Install specific version of Pulumi (e.g., 3.0.0)
      - name: Install Pulumi
        run: |
          curl -fsSL https://get.pulumi.com | sh
          echo "Installing specific version of Pulumi"
          mkdir -p $HOME/.pulumi/bin
          curl -fsSL https://github.com/pulumi/pulumi/releases/download/v3.0.0/pulumi-v3.0.0-linux-x64.tar.gz | tar -xz -C $HOME/.pulumi/bin
          export PATH=$HOME/.pulumi/bin:$PATH
          pulumi version # Verify the installed version

      # Setup AWS Credentials using the secret AWS_CONFIG
      - name: Setup AWS Credentials
        run: |
          echo "${{ secrets.AWS_CONFIG }}" > aws_credentials.json
          export AWS_ACCESS_KEY_ID=$(jq -r .AWS_ACCESS_KEY_ID aws_credentials.json)
          export AWS_SECRET_ACCESS_KEY=$(jq -r .AWS_SECRET_ACCESS_KEY aws_credentials.json)
          export AWS_REGION="us-east-1"
          pulumi stack select dev
          pulumi config set aws:region $AWS_REGION

      # Install Python dependencies
      - name: Install Dependencies
        run: pip install -r requirements.txt

      # Run Pulumi to apply the infrastructure changes
      - name: Run Pulumi
        run: pulumi up --yes

      # Publishing Pulumi outputs as GitHub Actions artifacts
      - name: Save Pulumi Outputs
        run: |
          pulumi stack output --json > pulumi_outputs.json
          echo "Pulumi outputs saved to pulumi_outputs.json"
        if: success()
      
      # Setting a notification or status update after the deployment
      - name: Notify Deployment Status
        run: |
          echo "Pulumi deployment completed successfully."
        if: success()


